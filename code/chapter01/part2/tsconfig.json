{
    // tsconfig.json是ts編譯器的配置文件，ts編譯器可以根據它的信息來對代碼進行編譯
    // "include" 用來指定哪些ts文件需要被編譯
    // 路徑: ** 表示任意目錄
    // 路徑:  * 表示任意文件
    // "exclude" 不需要被編譯的文件目錄
    // 默認值：["node_modules", "bower_components", "jspm_packages"]
    "include": [
        "./src/**/*"
    ],
    // "exclude": [
    //     "./src/hello/**/*"
    // ],
    /*
       compilerOptions: 編讀器的選項 
    */
    "compilerOptions": {
        // target 用來指定ts被編譯為的ES的版本
        // ES3（默認）、ES5、ES6/ES2015、ES7/ES2016、ES2017、ES2018、ES2019、ES2020、ESNext
        "target": "ES6",
        // module: 指定要使用的模塊化的規範
        // CommonJS、UMD、AMD、System、ES2020、ESNext、None
        "module": "system",
        // lib用來指定項目中要使用的庫
        // 'es5', 'es6', 'es2015', 'es7', 'es2016', 'es2017', 'es2018', 'es2019', 'es2020', 'es2021', 'es2022', 'esnext', 'dom', 'dom.iterable', 'webworker', 'webworker.importscripts', 'webworker.iterable', 'scripthost', 'es2015.core', 'es2015.collection', 'es2015.generator', 'es2015.iterable', 'es2015.promise', 'es2015.proxy', 'es2015.reflect', 'es2015.symbol', 'es2015.symbol.wellknown', 'es2016.array.include', 'es2017.object', 'es2017.sharedmemory', 'es2017.string', 'es2017.intl', 'es2017.typedarrays', 'es2018.asyncgenerator', 'es2018.asynciterable', 'es2018.intl', 'es2018.promise', 'es2018.regexp', 'es2019.array', 'es2019.object', 'es2019.string', 'es2019.symbol', 'es2020.bigint', 'es2020.date', 'es2020.promise', 'es2020.sharedmemory', 'es2020.string', 'es2020.symbol.wellknown', 'es2020.intl', 'es2020.number', 'es2021.promise', 'es2021.string', 'es2021.weakref', 'es2021.intl', 'es2022.array', 'es2022.error', 'es2022.intl', 'es2022.object', 'es2022.string', 'esnext.array', 'esnext.symbol', 'esnext.asynciterable', 'esnext.intl', 'esnext.bigint', 'esnext.string', 'esnext.promise', 'esnext.weakref'.
        // "lib": ["es6", "dom"],
        // outDir 用來指定編譯後文件所在的目錄
        "outDir": "./dist",
        // 將代碼合併為一個文件
        // 設置outFile後，所有的全局作用域中的代碼會合併到同一個文件中
        "outFile": "./dist/app.js"
    }
}